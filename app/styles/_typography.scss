@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;

      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }

      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  } @else {
    @error "Detected mixed units. Please use the same units for all parameters.";
  }
}

body {
  color: $base-font-color;
  font-family: $base-font-family;
  font-size: $base-font-size;
  font-weight: $base-font-weight;
  line-height: $base-line-height;
}

@media print {
  body {
    font-size: $base-font-size * 0.8;
  }
}

h1, h2, h3, h4, h5, h6 {
  font-family: $heading-font-family;
  line-height: $heading-line-height;
  font-weight: $heading-font-weight;
  margin: 0 0 $small-spacing;
}

$min-width: 20em;
$max-width: 60em;
h1 {
  @include fluid-type($min-width, $max-width, $base-font-size*2, $base-font-size*3);
}

h2 {
  @include fluid-type($min-width, $max-width, $base-font-size*1.625, $base-font-size*2.25);
}

h3 {
  @include fluid-type($min-width, $max-width, $base-font-size*1.375, $base-font-size*1.75);
}

h4 {
  font-size: $base-font-size * 1.2;
}

h5 {
  font-size: $base-font-size * 1.125;
}

h6 {
  font-size: $base-font-size;
}

p {
  margin: 0 0 $small-spacing;
}

a {
  color: $primary-color;
  transition: color $base-transition-duration $base-transition-easing;

  &:active,
  &:focus,
  &:hover {
    color: shade($primary-color, 25%);
  }
}
